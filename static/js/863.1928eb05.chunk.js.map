{"version":3,"file":"static/js/863.1928eb05.chunk.js","mappings":"6KACA,EAA4B,6B,8BCA5B,EAAuB,wBAAvB,EAA4D,8BAA5D,EAAkG,yBAAlG,EAAyI,+BAAzI,EAA0L,mCAA1L,EAAyO,6B,gDCanOA,EAASC,EAAAA,GACH,CACJC,MAAOD,EAAAA,KAAaE,WAAWD,QAAQE,QAAQ,IAC/CC,SAAUJ,EAAAA,KAAaE,WAAWG,IAAI,GAAGF,QAAQ,IACjDG,WAAYN,EAAAA,KAAcE,WAAWC,SAAQ,KAEhDD,WAEQK,EAAgB,WAAO,IAAD,IACzBC,GAAWC,EAAAA,EAAAA,MAEjB,GAIIC,EAAAA,EAAAA,IAAoB,CACpBC,UAAUC,EAAAA,EAAAA,GAAYb,KAJtBc,EADJ,EACIA,SACaC,EAFjB,EAEIC,UAAaD,OACbE,EAHJ,EAGIA,aAMA,OACQ,kBAAMC,UAAWC,EAAaC,SAAUH,GAHR,SAACI,GAAD,OAAUZ,GAASa,EAAAA,EAAAA,IAAQD,OAG3D,WACI,iBAAKH,UAAWC,EAAhB,WACI,uCACA,0BAAOD,UAAWC,GAAkBL,EAAS,YAC7C,cAAGI,UAAWC,EAAd,mBAAmCJ,EAAOb,aAA1C,aAAmC,EAAcqB,cAErD,iBAAKL,UAAWC,EAAhB,WACI,yCACA,0BAAOD,UAAWC,EAAcK,KAAM,YAAgBV,EAAS,eAC/D,cAAGI,UAAWC,EAAd,mBAAmCJ,EAAOV,gBAA1C,aAAmC,EAAiBkB,cAExD,iBAAKL,UAAWC,EAAhB,WACI,0BAAOK,KAAM,WAAYC,GAAI,SAAaX,EAAS,iBACnD,kBAAOY,QAAS,QAAhB,6BAEJ,kBAAOR,UAAWC,EAAkBK,KAAK,e,UCzB7D,EAlBsB,WAGlB,OAFgBG,EAAAA,EAAAA,IAAeC,EAAAA,KAGpB,SAAC,KAAD,CAAUC,GAAI,cAIrB,iBAAKX,UAAWC,EAAhB,WACI,2CACA,yDACA,iBAAMW,MAAO,CAAEC,aAAc,QAA7B,8BACA,SAACvB,EAAD","sources":["webpack://social-network/./src/components/Content/LoginPage/LoginPage.module.css?b005","webpack://social-network/./src/components/Content/LoginPage/LoginForm/loginForm.module.css?0587","components/Content/LoginPage/LoginForm/LoginForm.tsx","components/Content/LoginPage/LoginPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginPage_container__LPPb0\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"loginForm_form__6gWoX\",\"inputField\":\"loginForm_inputField__b9+BY\",\"input\":\"loginForm_input__Y-2cp\",\"inputErrors\":\"loginForm_inputErrors__sZtoO\",\"rememberMeField\":\"loginForm_rememberMeField__BXC+I\",\"submitBtn\":\"loginForm_submitBtn__jzL-c\"};","import React, { FC } from \"react\";\r\nimport styles from './loginForm.module.css'\r\nimport { useAppDispatch } from \"store/reduxStore\";\r\nimport { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { loginTC } from \"store/reducers/authReducer/authReducer\";\r\n\r\ntype LoginFormT = {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n};\r\n\r\nconst schema = yup\r\n    .object({\r\n        email: yup.string().required().email().default(\"\"),\r\n        password: yup.string().required().min(4).default(\"\"),\r\n        rememberMe: yup.boolean().required().default(false),\r\n    })\r\n    .required();\r\n\r\nexport const LoginForm: FC = () => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const {\r\n        register,\r\n        formState: { errors },\r\n        handleSubmit,\r\n    } = useForm<LoginFormT>({\r\n        resolver: yupResolver(schema),\r\n    });\r\n    const onSubmit: SubmitHandler<LoginFormT> = (data) => dispatch(loginTC(data));\r\n\r\n        return (\r\n                <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className={styles.inputField}>\r\n                        <label>E-mail</label>\r\n                        <input className={styles.input} {...register(\"email\")} />\r\n                        <p className={styles.inputErrors}>{errors.email?.message}</p>\r\n                    </div>\r\n                    <div className={styles.inputField}>\r\n                        <label>Password</label>\r\n                        <input className={styles.input} type={\"password\"} {...register(\"password\")} />\r\n                        <p className={styles.inputErrors}>{errors.password?.message}</p>\r\n                    </div>\r\n                    <div className={styles.rememberMeField}>\r\n                        <input type={\"checkbox\"} id={\"check\"} {...register(\"rememberMe\")} />\r\n                        <label htmlFor={\"check\"}>Remember me</label>\r\n                    </div>\r\n                    <input className={styles.submitBtn} type=\"submit\" />\r\n                </form>\r\n        );\r\n};\r\n","import React, { FC } from \"react\";\nimport styles from \"./LoginPage.module.css\";\nimport { useAppSelector } from \"store/reduxStore\";\nimport { Navigate } from \"react-router-dom\";\nimport { LoginForm } from \"components/Content/LoginPage/LoginForm/LoginForm\";\nimport { selectIsLogin } from \"store/reducers/authReducer/authSelectors\";\n\nconst LoginPage: FC = () => {\n    const isLogin = useAppSelector(selectIsLogin);\n\n    if (isLogin) {\n        return <Navigate to={\"/profile\"} />;\n    }\n\n    return (\n        <div className={styles.container}>\n            <h3>Test account:</h3>\n            <span>Email: free@samuraijs.com</span>\n            <span style={{ marginBottom: \"50px\" }}> Password: free</span>\n            <LoginForm />\n        </div>\n    );\n};\n\n\nexport default LoginPage;"],"names":["schema","yup","email","required","default","password","min","rememberMe","LoginForm","dispatch","useAppDispatch","useForm","resolver","yupResolver","register","errors","formState","handleSubmit","className","styles","onSubmit","data","loginTC","message","type","id","htmlFor","useAppSelector","selectIsLogin","to","style","marginBottom"],"sourceRoot":""}